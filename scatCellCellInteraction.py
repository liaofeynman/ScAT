import os
import subprocess
import argparse

"""
Created on August 2021
@email: liaoshangfeng@genomics.cn
"""

parser = argparse.ArgumentParser(
    prog='SCAT CellCellInteraction', formatter_class=argparse.ArgumentDefaultsHelpFormatter)

parser.add_argument('CellCellInteraction', help='Perform cell-cell communication analysis by CellChat')

parser.add_argument(
    '-r', '--Rscript',
    dest='Rscript',
    type=str,
    default="/ldfssz1/ST_OCEAN/USER/liaoshangfeng/software/anaconda3/envs/R411/bin/Rscript",
    help='Rscript path')

parser.add_argument(
    '-i', '--input',
    dest='input',
    type=str,
    required=True,
    default=None,
    help='Input raw data file (*.txt.gz)')

parser.add_argument(
    '-s', '--species',
    dest='species',
    type=str,
    default='Human',
    choices=['Human', 'Mouse'],
    help='species name (default: %(default)s)')

parser.add_argument(
    '-m', '--meta',
    dest='meta',
    type=str,
    required=True,
    help='Cell labels (Recommand the cell types results generated by Annotation module (default: %(default)s)')

parser.add_argument(
    '-o', '--out',
    dest='out',
    type=str,
    required=True,
    default=None,
    help='Directory to save file')

parser.add_argument(
    '--prefix',
    type=str,
    default='sample',
    help='Sample ID, will be used as output prefix and seuratObj ident')


args = parser.parse_args()


def get_r_script():
    r_script = os.path.join(os.path.dirname(__file__), "R/CCI_cellchat_v1.R")
    return r_script


def make_dir(path):
    if(os.path.exists(path) and os.path.isdir(path)):
        pass
    else:
        os.makedirs(path)


def main():
    make_dir(args.out)
    r_script = get_r_script()
    commands = [args.Rscript, r_script]
    rscript_args = [
        "-i", args.input,
        "-m", args.meta,
        "--prefix", args.prefix,
        "-o", args.out]

    if args.species:
        rscript_args.extend(["--species", args.species])

    commands.extend(rscript_args)
    print(args)
    subprocess.run([str(i) for i in commands])


if __name__ == "__main__":
    main()
